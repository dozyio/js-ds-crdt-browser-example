(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{8312:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return i(1352)}])},1352:function(e,t,i){"use strict";let r,s,n,o,a,l;i.r(t),i.d(t,{default:function(){return ez}});var c,d,h,u,g,p,y,w,f=i(5893),m=i(3833),b=i(5776),x=i(8823),v=i(5349),S=i(5527),k=i(2338),D=i(7239),E=i(7747),j=i(3717),H=i(2757),C=i(4e3),P=i(2883),T=i(3090),$=i(4225),A=i(7169),I=i(5541),M=i(9993),N=i(5123),B=i(1852),R=i(5133),G=i(3323),W=i(1394),K=i(570),L=i(9989),J=i(2635),q=i(3366),U=i(3798),X=i(4735),_=i(841),F=i(3628),O=i(8134),Q=i(5720),z=i(8493),V=i(3826),Z=i(5403),Y=i(4370),ee=i(9655),et=i(4348),ei=i(1486),er=i(8937),es=i(5796),en=i(5732),eo=i(7334);class ea{set=new Set;mux=new es.WU;async visit(e){let t=e.toString(),i=!1;return await this.mux.runExclusive(()=>{this.set.has(t)?i=!1:(this.set.add(t),i=!0)}),i}async add(e){await this.mux.runExclusive(()=>{this.set.add(e.toString())})}async remove(e){await this.mux.runExclusive(()=>{this.set.delete(e.toString())})}async has(e){let t=!1;return await this.mux.runExclusive(()=>{t=this.set.has(e.toString())}),t}}class el{store;constructor(e){this.store=e}async put(e,t){await this.store.addToDelta(e.toString(),t)>this.store.options.maxBatchDeltaSize&&(console.log("Delta size exceeded max, committing batch"),await this.commit())}async delete(e){await this.store.rmvToDelta(e.toString())>this.store.options.maxBatchDeltaSize&&(console.log("Delta size exceeded max, committing batch"),await this.commit())}async commit(){await this.store.publishDelta()}}var ec=i(9697),ed=i(3447),eh=i(5068),eu=i(1025),eg=i(6142).lW;function ep(e){return function(e){let t=ed.base32.baseEncode(e).toUpperCase();return new en.s(`/${t}`)}(e)}function ey(e){let t=function(e){let t=e.toString().slice(1);return ed.base32.baseDecode(t.toLowerCase())}(e);return eh.Jx(t)}async function ew(e){let t=new TextEncoder().encode(e.sequenceNumber.toString());return eu.sha256.encode(t)}function ef(e,t){if(e===t)return 0;if(e.length<t.length)return -1;if(e.length>t.length)return 1;for(let i=0;i<e.length;i++){if(e[i]<t[i])return -1;if(e[i]>t[i])return 1}return 0}function em(e){let t=new Uint8Array(e),i=0n,r=0;for(let e=0;e<t.length;e++){if(10===e)return[0n,-(e+1)];let s=t[e];if(s<128){if(9===e&&s>1)return[0n,-(e+1)];return[i|BigInt(s)<<BigInt(r),e+1]}i|=BigInt(127&s)<<BigInt(r),r+=7}return[0n,0]}class eb{store;cache;cacheMux;namespace;logger;constructor(e,t,i){this.store=e,this.namespace=t,this.logger=i,this.cache={},this.cacheMux=new es.WU,this.primeCache()}key(e){let t=ep(e.multihash.bytes);return this.namespace.child(t)}async isHead(e){return this.cacheMux.runExclusive(async()=>{for(let t in this.cache)if(Object.prototype.hasOwnProperty.call(this.cache,t)){let i=eo.k0.parse(t);if(e.equals(i))return{isHead:!0,height:this.cache[t]}}return{isHead:!1,height:0n}})}async len(){return this.cacheMux.runExclusive(async()=>Object.keys(this.cache).length)}async replace(e,t,i){let r;this.logger(`replacing DAG head: ${e.toString()} -> ${t.toString()} (new height: ${i})`);let{isHead:s}=await this.isHead(e);if(!s)throw Error(`CID ${e.toString()} not found among current heads`);let n=!1;"batch"in this.store&&"function"==typeof this.store.batch?(r=this.store.batch(),n=!0):r=this.store,await this.write(r,t,i),await this.cacheMux.runExclusive(async()=>{n||(this.cache[t.toString()]=i),await this.delete(r,e),n||delete this.cache[e.toString()],n&&("commit"in r&&"function"==typeof r.commit&&await r.commit(),delete this.cache[e.toString()],this.cache[t.toString()]=i)})}async write(e,t,i){let r=new ArrayBuffer(8),s=new DataView(r);try{s.setBigUint64(0,i,!0)}catch(e){throw Error("Error encoding height")}let n=this.getActualLength(s);this.logger(`Writing key: ${this.key(t).toString()}, CID: ${t.toString()}, height: ${i}`),await e.put(this.key(t),new Uint8Array(r,0,n))}getActualLength(e){let t=8;for(;t>0&&0===e.getUint8(t-1);)t--;return t}async delete(e,t){let i=this.key(t);this.logger(`Deleting key: ${i.toString()}, CID: ${t.toString()}`),await e.delete(i)}async add(e,t){this.logger(`Adding new DAG head: ${e.toString()} (height: ${t})`),await this.write(this.store,e,t),await this.cacheMux.runExclusive(async()=>{this.cache[e.toString()]=t})}async list(){let e=BigInt(0),t=[];return await this.cacheMux.runExclusive(async()=>{t=Object.keys(this.cache).map(e=>eo.k0.parse(e)),e=Object.values(this.cache).map(e=>BigInt(e)).reduce((e,t)=>t>e?t:e,BigInt(0))}),t.sort((e,t)=>ef(e.bytes,t.bytes)),{heads:t,maxHeight:e}}async primeCache(){let e={prefix:this.namespace.toString()};for await(let t of this.store.query(e)){let e=t.key.toString().replace(this.namespace.toString()+"/","");try{let i=function(e,t){let i=ey(e);return eo.k0.createV1(t,i)}(new en.s(e),ec.code),[r,s]=em(t.value.buffer);if(s<=0)throw Error("error decoding height");this.cache[i.toString()]=r}catch(t){throw this.logger.error(`Failed to decode key: ${e}`,t),t}}}}var ex=i(8787),ev=i(6152),eS=i(5115);(d=(c=y||(y={})).Delta||(c.Delta={})).codec=()=>(null==s&&(s=(0,ev.yw)((e,t,i={})=>{if(!1!==i.lengthDelimited&&t.fork(),null!=e.elements)for(let i of e.elements)t.uint32(10),c.Element.codec().encode(i,t);if(null!=e.tombstones)for(let i of e.tombstones)t.uint32(18),c.Element.codec().encode(i,t);null!=e.priority&&0n!==e.priority&&(t.uint32(24),t.uint64(e.priority)),!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r={elements:[],tombstones:[],priority:0n},s=null==t?e.len:e.pos+t;for(;e.pos<s;){let t=e.uint32();switch(t>>>3){case 1:if(i.limits?.elements!=null&&r.elements.length===i.limits.elements)throw new ev.mZ('Decode error - map field "elements" had too many elements');r.elements.push(c.Element.codec().decode(e,e.uint32(),{limits:i.limits?.elements$}));break;case 2:if(i.limits?.tombstones!=null&&r.tombstones.length===i.limits.tombstones)throw new ev.mZ('Decode error - map field "tombstones" had too many elements');r.tombstones.push(c.Element.codec().decode(e,e.uint32(),{limits:i.limits?.tombstones$}));break;case 3:r.priority=e.uint64();break;default:e.skipType(7&t)}}return r})),s),d.encode=e=>(0,ev.LE)(e,d.codec()),d.decode=(e,t)=>(0,ev.C6)(e,d.codec(),t),(h=c.Element||(c.Element={})).codec=()=>(null==n&&(n=(0,ev.yw)((e,t,i={})=>{!1!==i.lengthDelimited&&t.fork(),null!=e.key&&""!==e.key&&(t.uint32(10),t.string(e.key)),null!=e.id&&""!==e.id&&(t.uint32(18),t.string(e.id)),null!=e.value&&e.value.byteLength>0&&(t.uint32(26),t.bytes(e.value)),!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r={key:"",id:"",value:(0,eS.u)(0)},s=null==t?e.len:e.pos+t;for(;e.pos<s;){let t=e.uint32();switch(t>>>3){case 1:r.key=e.string();break;case 2:r.id=e.string();break;case 3:r.value=e.bytes();break;default:e.skipType(7&t)}}return r})),n),h.encode=e=>(0,ev.LE)(e,h.codec()),h.decode=(e,t)=>(0,ev.C6)(e,h.codec(),t),c.codec=()=>(null==r&&(r=(0,ev.yw)((e,t,i={})=>{!1!==i.lengthDelimited&&t.fork(),!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r=null==t?e.len:e.pos+t;for(;e.pos<r;){let t=e.uint32();e.skipType(7&t)}return{}})),r),c.encode=e=>(0,ev.LE)(e,c.codec()),c.decode=(e,t)=>(0,ev.C6)(e,c.codec(),t);let{createNode:ek}=ec;class eD{blockstore;logger;constructor(e,t){this.blockstore=e,this.logger=t}async getDelta(e,t){this.logger("getting delta",e.toString());let i=await this.get(e,t);this.logger("getDelta node",i.cid.toString(),i.value);let r=this.extractDelta(i);return{node:i,delta:r}}async getPriority(e,t){this.logger("getting priority",e.toString());let{delta:i}=await this.getDelta(e,t);return this.logger("priority",i.priority),i.priority}getDeltas(e,t){let i=this;return async function*(){for await(let{node:r,error:s}of i.getMany(e,t)){if(void 0!==s){yield{err:s};continue}if(null==r){yield{err:Error("Node is undefined")};continue}try{if("object"!=typeof r.value||null===r.value||!("Data"in r.value)){yield{err:Error("Node has no data undefined")};continue}let e=r.value.Data;if(0===e.length){yield{err:Error("Node has 0 data length")};continue}let t=i.extractDelta(r);yield{delta:t,node:r}}catch(e){yield{err:e}}}}()}async get(e,t){this.logger("getting node",e.toString());let i=await this.blockstore.get(e,t),r=await ex.Jx({bytes:i,codec:ec,hasher:eu.sha256});return this.logger("node",r.cid.toString(),r.value),r}async *getMany(e,t){for(let i of e)try{let e=await this.get(i,t);yield{node:e}}catch(e){yield{node:void 0,error:e}}}extractDelta(e){if("object"!=typeof e.value||null===e.value||!("Data"in e.value))throw Error("Node has no data");let t=e.value.Data;if(0===t.length)throw Error("Node has no data");try{return y.Delta.decode(t)}catch(e){throw Error("Failed to decode delta data")}}static async makeNode(e,t){let i=new Uint8Array;null!=e&&(i=y.Delta.encode(e));let r=[];for(let e of t)r.push({Name:"",Hash:e});let s=ek(i,r);return await ex.cv({value:s,codec:ec,hasher:eu.sha256})}}(g=(u=w||(w={})).CRDTBroadcast||(u.CRDTBroadcast={})).codec=()=>(null==a&&(a=(0,ev.yw)((e,t,i={})=>{if(!1!==i.lengthDelimited&&t.fork(),null!=e.Heads)for(let i of e.Heads)t.uint32(10),u.Head.codec().encode(i,t);!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r={Heads:[]},s=null==t?e.len:e.pos+t;for(;e.pos<s;){let t=e.uint32();if(t>>>3==1){if(i.limits?.Heads!=null&&r.Heads.length===i.limits.Heads)throw new ev.mZ('Decode error - map field "Heads" had too many elements');r.Heads.push(u.Head.codec().decode(e,e.uint32(),{limits:i.limits?.Heads$}))}else e.skipType(7&t)}return r})),a),g.encode=e=>(0,ev.LE)(e,g.codec()),g.decode=(e,t)=>(0,ev.C6)(e,g.codec(),t),(p=u.Head||(u.Head={})).codec=()=>(null==l&&(l=(0,ev.yw)((e,t,i={})=>{!1!==i.lengthDelimited&&t.fork(),null!=e.Cid&&e.Cid.byteLength>0&&(t.uint32(10),t.bytes(e.Cid)),!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r={Cid:(0,eS.u)(0)},s=null==t?e.len:e.pos+t;for(;e.pos<s;){let t=e.uint32();t>>>3==1?r.Cid=e.bytes():e.skipType(7&t)}return r})),l),p.encode=e=>(0,ev.LE)(e,p.codec()),p.decode=(e,t)=>(0,ev.C6)(e,p.codec(),t),u.codec=()=>(null==o&&(o=(0,ev.yw)((e,t,i={})=>{!1!==i.lengthDelimited&&t.fork(),!1!==i.lengthDelimited&&t.ldelim()},(e,t,i={})=>{let r=null==t?e.len:e.pos+t;for(;e.pos<r;){let t=e.uint32();e.skipType(7&t)}return{}})),o),u.encode=e=>(0,ev.LE)(e,u.codec()),u.decode=(e,t)=>(0,ev.C6)(e,u.codec(),t);var eE=i(2247);class ej extends Error{constructor(){super(),this.message="No best value found",this.name="NoBestValueError",Object.setPrototypeOf(this,new.target.prototype)}}class eH{store;namespace;nodeGetter;putHook;deleteHook;logger;putElemsMux;constructor(e,t,i,r,s,n){this.store=e,this.namespace=t,this.nodeGetter=i,this.logger=r,this.putHook=s,this.deleteHook=n,this.putElemsMux=new es.WU}add(e,t){return{elements:[{key:e,value:t}],tombstones:[],priority:BigInt(0)}}cleanKey(e){if(""===e)return"/";let t="/"===e[0],i=e.length,r="",s=0;for(t&&(r+="/",s=1);s<i;)if("/"===e[s])s++;else for("/"!==r&&r.length>0&&(r+="/");s<i&&"/"!==e[s];)r+=e[s],s++;return r}queryPrefixFilter(e,t){if(""!==e.prefix&&void 0!==e.prefix&&null!==e.prefix){let i=e.prefix;if(0===i.length?i="/":("/"!==i[0]&&(i="/"+i),i=this.cleanKey(i)),"/"!==i){let e=i+"/";if(!t.startsWith(e))return null}}return t}async remove(e){let t={elements:[],tombstones:[],priority:0n},i=this.elemsPrefix(e),r={prefix:i.toString()};for await(let s of this.store.queryKeys(r)){let n=s.toString();null!==(n=this.queryPrefixFilter(r,n))&&(n.startsWith(i.toString())&&(n=n.slice(i.toString().length)),this.rawKey(n).isTopLevel()&&(await this.inTombsKeyID(e,n)||t.tombstones.push({key:e,id:n,value:new Uint8Array})))}return t}rawKey(e){if(0===e.length)return new en.s("/");if(0===e.length||"/"!==e[0]||e.length>1&&"/"===e[e.length-1])throw Error("invalid datastore key: "+e);return new en.s(e)}async element(e){let t=this.valueKey(e);try{let e=await this.store.get(t);return function(e){if(eg.isBuffer(e))return new Uint8Array(e);if(e instanceof Uint8Array)return e;throw Error("Invalid value type")}(e)}catch(e){if(void 0!==e.code&&"ERR_NOT_FOUND"===e.code||void 0!==e.name&&"NotFoundError"===e.name||void 0===e.code&&void 0===e.name&&!(e.message.includes("Not Found")||e.message.includes("NotFound")||e.message.includes("no such file or directory")))return null;throw e}}async elements(e){let t=new en.s(e.prefix??""),i=this.keyPrefix("k"),r=i.child(t).toString(),s=this.store.query({prefix:r}),n=[];for await(let e of s){if(!e.key.toString().endsWith("/v"))continue;let t=e.key.toString();t.startsWith(i.toString())&&(t=t.slice(i.toString().length)),t.endsWith("/v")&&(t=t.slice(0,t.length-2)),n.push({key:new en.s(t),value:e.value})}return n}async inSet(e){let t=this.valueKey(e);return this.store.has(t)}async datastoreSync(e){let t=[this.elemsPrefix(e.toString()),this.tombsPrefix(e.toString()),this.keyPrefix("k").child(e)],i=await Promise.all(t.map(async e=>{try{"sync"in this.store&&"function"==typeof this.store.sync&&await this.store.sync(e)}catch(e){return e}}));if(i.some(Boolean))throw i}keyPrefix(e){return this.namespace.child(new en.s(e))}elemsPrefix(e){return this.keyPrefix("s").child(new en.s(e))}tombsPrefix(e){return this.keyPrefix("t").child(new en.s(e))}valueKey(e){return this.keyPrefix("k").child(new en.s(e)).child(new en.s("v"))}priorityKey(e){return this.keyPrefix("k").child(new en.s(e)).child(new en.s("p"))}async inTombsKeyID(e,t){let i=this.tombsPrefix(e).child(new en.s(t));return this.store.has(i)}async setValue(e,t,i,r,s){if(await this.inTombsKeyID(t,i))return;let n=await this.getPriority(t);if(s<n)return;let o=this.valueKey(t);s===n&&ef(await this.store.get(o),r)>=0||(await e.put(o,r),await this.setPriority(e,t,s),void 0!==this.putHook&&this.putHook(t,r))}async findBestValue(e,t){let i=this.elemsPrefix(e),r={prefix:i.toString()},s=this.store.queryKeys(r),n=new Uint8Array,o=0n,a=!1;for await(let r of s){let s=r.toString();s.startsWith(i.toString())&&(s=s.slice(i.toString().length));try{if(!this.rawKey(s).isTopLevel())continue}catch{continue}if(t.includes(s)||await this.inTombsKeyID(e,s))continue;let l=ey(new en.s(this.cleanKey(s))),c=eE.k0.createV1(112,l),d=await this.nodeGetter.getDelta(c);if(d.delta.priority<o)continue;let h=new Uint8Array;for(let t of d.delta.elements){if(t.key!==e)continue;let i=t.value;0>ef(h,i)&&(h=i)}if(d.delta.priority>o){a=!0,n=h,o=d.delta.priority;continue}0>ef(n,h)&&(a=!0,n=h)}if(!a)throw new ej;return{value:n,priority:o}}async getPriority(e){let t=this.priorityKey(e);try{let e=await this.store.get(t);if(null==e||0===e.length)return 0n;let[i,r]=em(e);if(r<=0)throw Error("error decoding priority");return i-1n}catch(e){if("ERR_NOT_FOUND"===e.code||e.message.includes("Not Found")||e.message.includes("NotFound")||e.message.includes("no such file or directory"))return 0n;throw e}}async setPriority(e,t,i){let r=this.priorityKey(t),s=new Uint8Array(10),n=function(e,t){let i=0;for(;t>=128n;)if(e[i]=128|Number(255n&t),t>>=7n,++i>=e.length)throw Error("Buffer too small");return e[i]=Number(t),i+1}(s,i+1n);if(0===n)throw Error("encoding priority failed");await e.put(r,s.slice(0,n))}async putElems(e,t,i){await this.putElemsMux.runExclusive(async()=>{let r;if(0!==e.length){for(let s of(r="batch"in this.store&&"function"==typeof this.store.batch?this.store.batch():this.store,e)){s.id=t;let e=s.key,n=this.elemsPrefix(e).child(new en.s(t));await r.put(n,new Uint8Array),await this.setValue(r,e,t,s.value,i)}"commit"in r&&"function"==typeof r.commit&&await r.commit()}})}async putTombs(e){let t;if(0===e.length)return;t="batch"in this.store&&"function"==typeof this.store.batch?this.store.batch():this.store;let i=new Map;for(let r of e){let e=r.key,s=r.id,n=this.valueKey(e);i.set(e,[...i.get(e)??[],s]);let o=i.get(e);if(void 0===o)throw Error("dElems is undefined");try{let{value:i,priority:r}=await this.findBestValue(e,o);await this.store.put(new en.s(this.cleanKey(n.toString())),i),await this.setPriority(t,this.cleanKey(e),r)}catch(t){if(t instanceof ej)await this.store.delete(new en.s(this.cleanKey(n.toString()))),await this.store.delete(this.priorityKey(this.cleanKey(e)));else throw t}let a=this.tombsPrefix(e).child(new en.s(s));await this.store.put(a,new Uint8Array)}for(let[e,r]of("commit"in t&&"function"==typeof t.commit&&await t.commit(),i))void 0!==this.deleteHook&&this.deleteHook(e)}async merge(e,t){await this.putTombs(e.tombstones),await this.putElems(e.elements,t,e.priority)}}let eC=Error("receiving blocks aborted since no new blocks will be broadcasted");function eP(){return{loggerPrefix:"crdt",rebroadcastInterval:5e3,putHook:void 0,deleteHook:void 0,numWorkers:5,dagSyncerTimeout:3e5,maxBatchDeltaSize:1048576,repairInterval:36e5,logInterval:6e4,multiHeadProcessing:!1}}class eT{session;root;rootPrio;delta;node;children;constructor(e,t,i,r,s,n){this.session=e,this.root=t,this.rootPrio=i,this.delta=r,this.node=s,this.children=n}}class e${ctx;options;prefixedLogger;logger;store;namespace;set;heads;dagService;broadcaster;seenHeadsMux=new es.WU;seenHeads;curDelta=null;curDeltaMutex=new es.WU;jobQueue;sendJobs;queuedChildren;nodeGetter;constructor(e,t,i,r,s){let n;n=void 0!==s?{...eP(),...s}:eP(),this.ctx=new AbortController,this.options=n,this.prefixedLogger=(0,er.Ci)(this.options.loggerPrefix),this.logger=this.prefixedLogger.forComponent("crdt"),this.store=e,this.namespace=t,this.dagService=i,this.broadcaster=r,this.seenHeads=new Map,this.jobQueue=[],this.sendJobs=[],this.queuedChildren=new ea,this.nodeGetter=new eD(this.dagService.blockstore,this.prefixedLogger.forComponent("ipld")),this.set=new eH(e,t.child(new en.s("s")),this.nodeGetter,this.prefixedLogger.forComponent("set"),this.options.putHook,this.options.deleteHook),this.heads=new eb(e,t.child(new en.s("h")),this.prefixedLogger.forComponent("heads")),this.handleNext();for(let e=0;e<this.options.numWorkers;e++)this.scheduleDagWorker();this.scheduleSendJobWorker(),this.scheduleRebroadcast(),this.scheduleRepair(),this.scheduleLogStats()}async scheduleDagWorker(){try{await this.dagWorker()}catch(e){this.logger.error("Error in dagWorker:",e)}finally{setTimeout(()=>{this.scheduleDagWorker()},1)}}async scheduleSendJobWorker(){try{await this.sendJobWorker()}catch(e){this.logger.error("Error in sendJobWorker:",e)}finally{setTimeout(()=>{this.scheduleSendJobWorker()},1)}}async scheduleRebroadcast(){try{this.logger("running rebroadcast"),await this.rebroadcast()}catch(e){this.logger.error("Error in rebroadcast:",e)}finally{setTimeout(()=>{this.scheduleRebroadcast()},this.options.rebroadcastInterval)}}async scheduleRepair(){try{this.logger("running repair"),await this.repair()}catch(e){this.logger.error("Error in repair:",e)}finally{setTimeout(()=>{this.scheduleRepair()},this.options.repairInterval)}}async scheduleLogStats(){try{this.logger("running logStats"),await this.logStats()}catch(e){this.logger.error("Error in logStats:",e)}finally{setTimeout(()=>{this.scheduleLogStats()},this.options.logInterval)}}handleNext(){this.broadcaster.setHandler(async e=>{try{this.logger("Handling incoming pubsub message");let t=await this.decodeBroadcast(e),i=async e=>{try{await this.handleBlock(e)}catch(e){this.logger.error(`error processing new head: ${e}`)}},r=await this.heads.len();if(this.logger("curHeadCount",r),0===r)for(let e of t){let t=await this.nodeGetter.getPriority(e);this.logger("prio",t),await this.heads.add(e,t)}for(let e of t)this.options.multiHeadProcessing?i(e).catch(e=>{this.logger.error(e)}):await i(e),await this.seenHeadsMux.runExclusive(async()=>{this.seenHeads.set(e,!0)})}catch(e){if(e===eC||this.ctx.signal.aborted)return;this.logger.error("error parsing broadcast",e)}})}enqueueJob(e){this.ctx.signal.aborted||this.jobQueue.push(e)}enqueueSendJob(e){this.ctx.signal.aborted||this.sendJobs.push(e)}async dequeueJob(){return(this.jobQueue.length>0?this.jobQueue.shift():void 0)??null}async dequeueSendJob(){return(this.sendJobs.length>0?this.sendJobs.shift():void 0)??null}async dagWorker(){let e;let t=await this.dequeueJob();if(null!==t){this.logger("dagWorker has job");try{e=await this.processNode(t.root,t.rootPrio,t.delta,t.node)}catch(e){this.logger.error(`Error processing node: ${e}`),await this.markDirty(),t.session.release();return}try{await this.sendNewJobs(t.session,t.root,t.rootPrio,e)}catch(e){this.logger.error(e),await this.markDirty()}t.session.release()}}async sendJobWorker(){let e=await this.dequeueSendJob();null!==e&&(this.logger("sendJobWorker has job"),this.enqueueJob(e))}async repair(){if(0===this.options.repairInterval)return;let e=setTimeout(()=>{this.repairDAG().catch(e=>{this.logger.error("Error in repairDAG:",e)})},0);for(;!this.ctx.signal.aborted;)await new Promise(e=>setTimeout(e,this.options.repairInterval)),clearTimeout(e),e=setTimeout(()=>{this.repairDAG().catch(e=>{this.logger.error("Error in repairDAG:",e)})},this.options.repairInterval);clearTimeout(e)}async repairDAG(){let e=Date.now(),t=await this.heads.list(),i=[],r=new Set;for(let e of t.heads)i.push({head:e,node:e}),r.add(e.toString());for(;i.length>0&&!this.ctx.signal.aborted;){let e=i.shift();if(void 0===e)throw Error("Expected a node to process, but got undefined.");let{head:t,node:s}=e,{node:n}=await this.nodeGetter.getDelta(s);for(let e of(await this.isProcessed(s)||await this.handleBranch(t,s),n.links()))r.has(e[1].toString())||(r.add(e[1].toString()),i.push({head:t,node:e[1]}))}this.logger.trace(`DAG repair finished. Took ${Date.now()-e} ms`),await this.markClean()}dirtyKey(){return this.namespace.child(new en.s("d"))}async markDirty(){this.logger.error("Marking datastore as dirty"),await this.store.put(this.dirtyKey(),new Uint8Array)}async isDirty(){return this.store.has(this.dirtyKey())}async markClean(){this.logger("Marking datastore as clean"),await this.store.delete(this.dirtyKey())}async logStats(){for(;!this.ctx.signal.aborted;){await new Promise(e=>setTimeout(e,3e5));let e=await this.heads.list();this.logger(`Number of heads: ${e.heads.length}. Max height: ${e.maxHeight}. Queued jobs: ${this.jobQueue.length}. Dirty: ${await this.isDirty()}`)}}async decodeBroadcast(e){let t=w.CRDTBroadcast.decode(e);if(t?.Heads!==void 0)return Promise.all(t.Heads.map(e=>eo.k0.decode(e.Cid)));throw Error("Invalid broadcast data")}encodeBroadcast(e){let t={Heads:e.map(e=>({Cid:e.bytes}))};return w.CRDTBroadcast.encode(t)}async rebroadcast(){await this.rebroadcastHeads()}async rebroadcastHeads(){let e=await this.heads.list(),t=[];await this.seenHeadsMux.runExclusive(async()=>{for(let i=0;i<e.heads.length;i++)this.seenHeads.has(e.heads[i])||t.push(e.heads[i])}),await this.broadcast(t),await this.seenHeadsMux.runExclusive(async()=>{this.seenHeads.clear()})}async broadcast(e){if(0===e.length)return;let t=this.encodeBroadcast(e);this.logger(`Broadcasting ${e}`),await this.broadcaster.broadcast(t)}async handleBlock(e){this.logger("handling block",e.toString());try{if(await this.isProcessed(e)){this.logger(`${e} is known. Skip walking tree`);return}}catch(t){throw this.logger.error(`Error checking if block ${e} is processed: ${t}`),t}await this.handleBranch(e,e)}async handleBranch(e,t){this.logger("handling branch",e.toString(),t.toString());let i=new es.WU;await this.sendNewJobs(i,e,0n,[t])}async sendNewJobs(e,t,i,r){if(this.logger("sending new jobs",t.toString(),i.toString(),r.map(e=>e.toString())),0===r.length){this.logger("children.length === 0");return}0n===i&&(i=await this.nodeGetter.getPriority(r[0]));let s=new Set;for await(let n of this.nodeGetter.getDeltas(r)){if(null!==n.err&&void 0!==n.err)throw this.logger.error(`Error getting delta: ${n.err.message}`),n.err;if(null===n.node||void 0===n.node){this.logger.error("Error getting delta: node is null");continue}if(null===n.delta||void 0===n.delta){this.logger.error("Error getting delta: delta is null");continue}s.add(n.node.cid.toString()),this.logger("goodDeltas.set",n.node.cid.toString());let r=new eT(e,t,i,n.delta,n.node,[]);this.enqueueSendJob(r)}for(let e of r)s.has(e.toString())||(this.logger.error("GetDeltas did not include all children",e.toString()),await this.queuedChildren.remove(e))}async isProcessed(e){let t=this.processedBlockKey(e);this.logger("checking isProcessed",t.toString());let i=await this.store.has(t);return this.logger("isProcessed",t.toString(),i),i}processedBlockKey(e){return this.namespace.child(new en.s("b")).child(new en.s(e.toString()))}async markProcessed(e){try{let t=this.processedBlockKey(e);await this.store.put(t,new Uint8Array)}catch(t){throw this.logger.error(`Error marking block ${e} as processed: ${t}`),t}}async query(e){return this.set.elements(e)}async get(e){return this.logger("getting key",e.toString()),this.set.element(e.toString())}async has(e){return this.logger("has key",e.toString()),this.set.inSet(e.toString())}async getSize(e){this.logger("get size ",e.toString());try{let t=await this.set.element(e.toString());if(null===t)return 0;return t.length}catch(e){return -1}}async put(e,t){this.logger("putting key",e.toString());let i=this.set.add(e.toString(),t);await this.publish(i)}async delete(e){this.logger("deleting key",e.toString());let t=await this.set.remove(e.toString());0!==t.tombstones.length&&await this.publish(t)}async publish(e){this.logger("publishing delta",e);let t=await this.addDAGNode(e);await this.broadcast([t])}async addDAGNode(e){let t,i,r;try{t=await this.heads.list()}catch(e){throw this.logger.error(`Error getting heads: ${e}`),e}let s=t.maxHeight+1n;e.priority=s;try{i=await this.putBlock(t.heads,s,e)}catch(e){throw this.logger.error(`Error putting block: ${e}`),e}try{r=await this.processNode(i.cid,s,e,i),0!==r.length&&this.logger.error("bug: created a block to unknown children")}catch(e){this.logger.error(`Error processing node ${i.cid}: ${e}`),await this.markDirty()}return i.cid}async putBlock(e,t,i){this.logger(`putting block with height ${t.toString()}`),null!=i&&(i.priority=t);let r=await eD.makeNode(i,e);await this.dagService.blockstore.put(r.cid,r.bytes,{onProgress:e=>{this.logger("blockstore put",e.type,e.detail)}});try{await this.dagService.routing.provide(r.cid,{onProgress:e=>{this.logger("dagService routing provide",e.type,e.detail)}})}catch(e){this.logger.error(`Error providing block ${r.cid}: ${e}`)}return r}async processNode(e,t,i,r){let s=r.cid,n=ep(s.multihash.bytes).toString();try{await this.set.merge(i,n)}catch(e){return this.logger.error(`Error merging delta: ${e}`),[]}try{await this.markProcessed(s)}catch(e){return this.logger.error(`Error marking processed: ${e}`),[]}try{await this.queuedChildren.remove(r.cid)}catch(e){return this.logger.error(`Error removing from queuedChildren: ${e}`),[]}this.logger(`Merged delta from node ${s} (priority: ${i.priority})`);try{let i=Array.from(r.links()),s=[];0===i.length&&await this.heads.add(e,t);let n=!1;for(let r of i){let i=r[1],{isHead:o}=await this.heads.isHead(i),a=await this.isProcessed(i);if(!o||(this.logger("isHead",i.toString()),await this.heads.replace(i,e,t),n=!0,!a)){if(a||!await this.queuedChildren.visit(i)){if(!n)try{await this.heads.add(e,t)}catch(t){this.logger.error(`Error adding head ${e}: ${t}`)}n=!0;continue}s.push(i)}}return this.logger("children",s),s}catch(e){throw this.logger.error(`Error processing node ${s}: ${e}`),e}}async batch(){return new el(this)}async sync(e){"sync"in this.store&&"function"==typeof this.store.sync&&"sync"in this.set&&"function"==typeof this.set.sync&&("/"===e.toString()?await this.store.sync(this.namespace):(await this.set.sync(e),await this.store.sync(this.heads.namespace)))}async close(){await this.isDirty()&&this.logger.error("Datastore closed while marked as dirty")}async printDAG(){let e=await this.heads.list(),t=new Set;for(let i of e.heads)await this.printDAGRec(i,0n,t)}async printDAGRec(e,t,i){let r="";for(let e=0n;e<t;e++)r+=" ";if(i.has(e.toString())){console.log(`${r}...`);return}let{node:s,delta:n}=await this.nodeGetter.getDelta(e);i.add(e.toString());let o=e.toString().slice(-4),a=`${r}- ${n.priority} | ${o}: Add: {`;for(let e of n.elements)a+=`${e.key}:${e.value},`;for(let e of(a+="}. Rmv: {",n.tombstones))a+=`${e.key},`;for(let e of(a+="}. Links: {",s.links()))a+=`${e[1].toString().slice(-4)},`;for(let e of(a+="}",await this.isProcessed(s.cid)||(a+=" Unprocessed!"),console.log(a+=":"),s.links()))await this.printDAGRec(e[1],t+1n,i)}async dotDAG(e){let t=await this.heads.list(),i=new ea;for(let i of(e("digraph CRDTDAG {\n"),e("subgraph heads {\n"),t.heads))e(`${i}
`);for(let r of(e("}\n"),t.heads))await this.dotDAGRec(e,r,0,i);e("}\n")}async dotDAGRec(e,t,i,r){let s=t.toString(),n=s.slice(-4);await r.add(t);let{node:o,delta:a}=await this.nodeGetter.getDelta(t);for(let t of(e(`${s} [label="${a.priority} | ${n}: +${a.elements.length} -${a.tombstones.length}"]
`),e(`${s} -> {`),o.links()))e(`${t[1]} `);for(let t of(e("}\n"),e(`subgraph sg_${s} {
`),o.links()))e(`${t[1]}
`);for(let t of(e("}\n"),o.links()))await this.dotDAGRec(e,t[1],i+1,r)}async internalStats(){let e=await this.heads.list();return{heads:e.heads,maxHeight:e.maxHeight,queuedJobs:this.jobQueue.length}}async addToDelta(e,t){let i=this.set.add(e,t);return this.updateDelta(i)}async updateDelta(e){let t=0;return await this.curDeltaMutex.runExclusive(()=>{null!==this.curDelta&&(this.curDelta=this.deltaMerge(this.curDelta,e),t=y.Delta.encode(this.curDelta).length)}),t}deltaMerge(e,t){return{elements:[...Array.isArray(e.elements)?e.elements:[],...Array.isArray(t.elements)?t.elements:[]],tombstones:[...Array.isArray(e.tombstones)?e.tombstones:[],...Array.isArray(t.tombstones)?t.tombstones:[]],priority:t.priority>e.priority?t.priority:e.priority}}async updateDeltaWithRemove(e,t){let i=0;return await this.curDeltaMutex.runExclusive(()=>{if(null!==this.curDelta){let t=this.curDelta.elements.filter(t=>t.key!==e);this.curDelta.elements=t}else this.curDelta=t;this.curDelta=this.deltaMerge(this.curDelta,t),i=y.Delta.encode(this.curDelta).length}),i}async rmvToDelta(e){let t=await this.set.remove(e);return this.updateDeltaWithRemove(e,t)}async publishDelta(){await this.curDeltaMutex.runExclusive(async()=>{if(null!==this.curDelta)try{await this.publish(this.curDelta)}finally{this.curDelta=null}})}async keyHistory(e){this.logger("getting key history for",e.toString());let t=[],i=await this.heads.list(),r=new ea;for(let s of i.heads)await this.keyHistoryRec(e,s,r,t);return t}async keyHistoryRec(e,t,i,r){if(await i.has(t))return;await i.add(t);let{node:s,delta:n}=await this.nodeGetter.getDelta(t),o=n.elements.find(t=>t.key===e.toString());for(let t of(void 0!==o&&(null===o.value?r.push(null):r.push(o.value)),void 0!==n.tombstones.find(t=>t.key===e.toString())&&r.push(null),s.links()))await this.keyHistoryRec(e,t[1],i,r)}}class eA{libp2p;topic;logger;constructor(e,t,i){this.logger=i,this.topic=t,this.libp2p=e}async broadcast(e){if(this.libp2p.services.pubsub.getPeers().length>0){this.logger("broadcasting data",e);let t=await this.libp2p.services.pubsub.publish(this.topic,e);this.logger("pubsub publish res",t)}else this.logger("skipping broadcast, no peers",e)}setHandler(e){this.logger("setting pubsub handler"),this.libp2p.services.pubsub.addEventListener("message",t=>{t.detail.topic===this.topic&&(this.logger("evt",t),e(t.detail.data))}),this.logger("subscribing to topic:",this.topic),this.libp2p.services.pubsub.subscribe(this.topic)}getSubscribers(){return void 0!==this.libp2p?this.libp2p.services.pubsub.getSubscribers(this.topic):(this.logger.error("libp2p is undefined"),[])}}var eI=i(7099);i(9382),i(5693),eI.Ed;var eM=i(5390),eN=i(8446),eB=i.n(eN),eR=i(3279),eG=i.n(eR),eW=i(3099),eK=i(9008),eL=i.n(eK),eJ=i(7294);let eq=!1,eU=["12D3KooWHEXu2JRgq7BKa7x4ahmjhiG5XZ2bUHF1Dcy56ueCXw48","12D3KooWLnnFfJxesZZN4wWKNxAudd9atnBnvWPhxg2LTWigExPP"],eX="pubXXX-dev",e_="pubXXX-dev",eF="https://r2.dozy.io:65531",eO="/textarea1",eQ="/catextarea1";function ez(){let e=(0,eJ.useRef)(null),[t,i]=(0,eJ.useState)(null),[r,s]=(0,eJ.useState)(void 0),[n,o]=(0,eJ.useState)(void 0),[a,l]=(0,eJ.useState)(0),[c,d]=(0,eJ.useState)(!1),[h,u]=(0,eJ.useState)(void 0),[g,p]=(0,eJ.useState)(""),[y,w]=(0,eJ.useState)(null),[er,es]=(0,eJ.useState)(""),[en,eo]=(0,eJ.useState)(""),[ea,el]=(0,eJ.useState)([]),[ec,ed]=(0,eJ.useState)(""),[eh,eu]=(0,eJ.useState)(""),[eg,ep]=(0,eJ.useState)([]),[ey,ef]=(0,eJ.useState)(!0),[em,eb]=(0,eJ.useState)([]),[ex,ev]=(0,eJ.useState)([]),[eS,ek]=(0,eJ.useState)([]),[eD,eE]=(0,eJ.useState)(""),[ej,eH]=(0,eJ.useState)([]);async function eC(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"test",t=arguments.length>1?arguments[1]:void 0,i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3?arguments[3]:void 0,s=new et.s("/test"),n=await eT(t,i),o=new eA(n.libp2p,e,(0,J.Ci)("crdt").forComponent("pubsub"));return new e$(t,s,n,o,void 0!==r?{...eP(),...r}:eP())}async function eT(e,t){let i=(0,B.s)(eF),{bootstrapAddrs:r,relayListenAddrs:s}=await eN(i),n=[(0,N.A)()],o=null;try{o=await (0,eM.N)({addresses:{listen:["/webrtc",...s]},transports:[(0,Q.d)(),(0,F.E)({filter:O.$6}),(0,_.Z)(),(0,_.R)(),(0,W.f)({discoverRelays:0})],connectionEncryption:[(0,b.t)()],peerDiscovery:[(0,G.U)({list:r}),(0,X.S6)({interval:5e3,listenOnly:!1,topics:["".concat(eX,"._peer-discovery._p2p._pubsub")]})],streamMuxers:[(0,x.P)()],connectionGater:{denyDialMultiaddr:async()=>!1},connectionManager:{minConnections:5},services:{kadDHT:(0,L.p7)({protocol:"/".concat(e_,"/kad/1.0.0")}),delegatedRouting:()=>i,identify:(0,K.y)(),pubsub:(0,m.Qh)({emitSelf:!1,allowPublishToZeroTopicPeers:!0,msgIdFn:ew,ignoreDuplicatePublishError:!0,tagMeshPeers:!0,doPX:!0}),ping:(0,U.q)()}})}catch(e){throw w(e),console.log(e),e}let a=null;if(o)try{a=await (0,ee.F3)({datastore:e,blockstore:t,libp2p:o,blockBrokers:n,dns:void 0}),u((0,R.j)(a))}catch(e){throw w(e),console.log(e),e}if(a)return a;throw Error("no helia")}let eI=(0,eJ.useCallback)(async()=>{let e=await (null==t?void 0:t.query({}));null!=e&&el(e)},[t]);async function eN(e){let t=await Promise.all(eU.map(async t=>{if(t)return(0,ei.Z)(e.getPeers((0,q.jE)(t)))})),i=[],r=[];for(let e of t)if(e&&e.Addrs.length>0)for(let t of e.Addrs){let s=t.protoNames();if((s.includes("dns4")||s.includes("dns6"))&&s.includes("tcp")&&s.includes("ws")&&s.includes("tls")||s.includes("webtransport")&&s.includes("certhash")||s.includes("webrtc-direct")&&s.includes("certhash")){if("127.0.0.1"===t.nodeAddress().address)continue;i.push(t.toString()),r.push(eR(t,e.ID))}}return eH(ej),{bootstrapAddrs:i,relayListenAddrs:r}}let eR=(e,t)=>"".concat(e.toString(),"/p2p/").concat(t.toString(),"/p2p-circuit");async function eK(){let e=new Z.Y("crdt/bs");await e.open();let t=new Y.s("crdt/ds");await t.open();try{let r=await eC(eX,t,e,{putHook:(e,t)=>{let i=new et.s(e);console.log("Added: [".concat(i.toString(),"] -> ").concat(new TextDecoder().decode(t)));let r=new CustomEvent("dsupdate",{detail:i.toString()});document.dispatchEvent(r)},deleteHook:e=>{let t=new et.s(e);console.log("Removed: [".concat(t.toString(),"]"));let i=new CustomEvent("dsupdate",{detail:t.toString()});document.dispatchEvent(i)},loggerPrefix:"crdt"});i(r)}catch(e){console.log(e),w(e)}}let ez=async()=>{try{let e=await (null==t?void 0:t.dagService.libp2p.dial((0,z.HM)(eD)));console.log(e)}catch(e){console.log(e)}},eV=async()=>{let e=new TextEncoder().encode(en);await (null==t?void 0:t.put(new et.s(er),e)),eI(),es(""),eo("")},eZ=async()=>{let e=await (null==t?void 0:t.get(new et.s(er)));null!=e&&eo(new TextDecoder().decode(e))},eY=async()=>{await (null==t?void 0:t.delete(new et.s(er))),es(""),eo("")},e0=async e=>{await (null==t?void 0:t.delete(e))},e1=async()=>{await eI()},e2=eJ.useRef(eG()(async(e,t,i)=>{console.log("Debounced Put ",t.toString(),i);let r=new TextEncoder().encode(i);await (null==e?void 0:e.put(t,r))},500)).current,e3=async e=>{ed(e.target.value),e2(t,new et.s(eO),e.target.value)},e8=async e=>{try{eu(e.target.value);let i=await (null==h?void 0:h.add(e.target.value));if(!i)throw Error("no cid");e2(t,new et.s(eQ),i.toString())}catch(e){console.log(e)}};return(0,eJ.useEffect)(()=>{(async()=>{ey?!eq&&ej?(await eK(),eq=!0):(null==t||t.dagService.libp2p.start(),null==t||t.dagService.start()):(await (null==t?void 0:t.dagService.libp2p.stop()),await (null==t?void 0:t.dagService.stop()),eb([]),ev([]),ek([]))})()},[ey,ej]),(0,eJ.useEffect)(()=>{(async()=>{if(t){await eI();let e=await (null==t?void 0:t.get(new et.s(eO)));if(null!=e){ed(new TextDecoder().decode(e));let i=await (null==t?void 0:t.keyHistory(new et.s(eO)));i&&ep(i.map(e=>e?new TextDecoder().decode(e):""))}let i=await (null==t?void 0:t.get(new et.s(eQ)));if(null!=i){let e=eW.k0.parse(new TextDecoder().decode(i)),t=await (null==h?void 0:h.get(e));if(!t)throw Error("could not get content for content addressed text area ".concat(e.toString()));eu(t)}}})()},[t]),(0,eJ.useEffect)(()=>{let i=async i=>{console.log("evt",i),t&&setTimeout(async()=>{if(await eI(),i.detail===eO){let e=await t.get(new et.s(eO));if(null!=e){ed(new TextDecoder().decode(e));let i=await (null==t?void 0:t.keyHistory(new et.s(eO)));i&&ep(i.map(e=>e?new TextDecoder().decode(e):""))}}if(i.detail===eQ){let e=await (null==t?void 0:t.get(new et.s(eQ)));if(null!=e){let t=eW.k0.parse(new TextDecoder().decode(e)),i=await (null==h?void 0:h.get(t));if(!i)throw Error("could not get content for content addressed text area ".concat(t.toString()));eu(i)}}let r="";await t.dotDAG(e=>{r+=e}),p(g),(async()=>{let t=await (0,V.eE)();try{let i=t.renderSVGElement(r);e.current&&(e.current.innerHTML="",e.current.appendChild(i))}catch(e){console.error("Error rendering the graph:",e)}})()},100)};return document.addEventListener("dsupdate",i),()=>{document.removeEventListener("dsupdate",i)}},[t,eI]),(0,eJ.useEffect)(()=>{let e=setInterval(()=>{if(!(null==t?void 0:t.dagService.libp2p)||t.dagService.libp2p&&"started"!==t.dagService.libp2p.status)return;let e=t.dagService.libp2p.getConnections(),i={connections:e};eB()(i,e)||ev(i.connections)},2e3);return()=>{clearInterval(e)}},[t,ex]),(0,eJ.useEffect)(()=>{if(!(null==t?void 0:t.dagService.libp2p)||!eX)return;let e=()=>{let e=t.dagService.libp2p.services.pubsub.getSubscribers(eX);console.log("subscribers",e),e&&ek(e.filter(e=>!eU.includes(e.toString())))};return e(),t.dagService.libp2p.services.pubsub.addEventListener("subscription-change",e),()=>{t.dagService.libp2p.services.pubsub.removeEventListener("subscription-change",e)}},[t,ek]),(0,eJ.useEffect)(()=>{let e=e=>{if(!t)return;let i=e.detail.peer.addresses.map(e=>{let{multiaddr:t}=e;return t});eH(i);let r=[];for(let e of i){let i=e.protoNames();if(i.includes("p2p-circuit")&&i.includes("webrtc")){if("127.0.0.1"===e.nodeAddress().address)continue;r.push("".concat(e,"/p2p/").concat(t.dagService.libp2p.peerId.toString()))}}eb(r)};return t&&t.dagService.libp2p.addEventListener("self:peer:update",e),()=>{t&&t.dagService.libp2p.removeEventListener("self:peer:update",e)}},[t]),(0,eJ.useEffect)(()=>{(async()=>{t&&d(await t.isDirty())})()},[t]),(0,eJ.useEffect)(()=>{let e=setInterval(async()=>{if(!(null==t?void 0:t.dagService.libp2p)||t.dagService.libp2p&&"started"!==t.dagService.libp2p.status)return;let e=await t.internalStats();s(null==e?void 0:e.heads),o(null==e?void 0:e.maxHeight),l(null==e?void 0:e.queuedJobs),console.log("stats",e)},2e3);return()=>{clearInterval(e)}},[t]),(0,eJ.useEffect)(()=>{ef(navigator.onLine);let e=()=>ef(!0),t=()=>ef(!1);return window.addEventListener("online",e),window.addEventListener("offline",t),()=>{window.removeEventListener("online",e),window.removeEventListener("offline",t)}},[]),(0,f.jsxs)(f.Fragment,{children:[(0,f.jsxs)(eL(),{children:[(0,f.jsx)("title",{children:"Merkle CRDT Example"}),(0,f.jsx)("meta",{name:"description",content:"Merkle CRDT Example"}),(0,f.jsx)("meta",{name:"viewport",content:"width=device-width, initial-scale=1"}),(0,f.jsx)("link",{rel:"icon",href:"/favicon.ico"})]}),(0,f.jsxs)("main",{children:[!ey&&(0,f.jsx)(k.W,{bg:"red.500",color:"white",p:4,w:"100%",children:(0,f.jsx)(D.M,{children:"Your device is offline"})}),null!=y&&(0,f.jsxs)(k.W,{bg:"red.500",color:"white",p:4,w:"100%",children:[y.code&&(0,f.jsxs)(E.xu,{children:["Error code: ",y.code]}),y.message&&(0,f.jsxs)(E.xu,{children:["Error message: ",y.message]}),"ERR_NO_VALID_ADDRESSES"===y.code&&(0,f.jsx)(E.xu,{children:"The relay servers maybe offline or wait a short while before reloading the page as you may be spamming the relay with reservation requests!"})]}),(0,f.jsxs)(j.k,{p:{base:2,md:8},w:"100%",direction:{base:"column",md:"row"},children:[(0,f.jsxs)(k.W,{pt:"2",children:[(0,f.jsx)(H.X,{as:"h3",children:"Merkle CRDT key-value store demo"}),(0,f.jsxs)(C.x,{children:["More info:",(0,f.jsxs)(P.r,{href:"https://github.com/dozyio/js-ds-crdt",isExternal:!0,children:["js-ds-crdt ",(0,f.jsx)(v.h,{mx:"2px"})]})]}),(0,f.jsxs)(C.x,{children:["Based on the paper: ",(0,f.jsxs)(P.r,{href:"https://arxiv.org/abs/2004.00107",isExternal:!0,children:["Merkle-CRDTs: Merkle-DAGs meet CRDTs ",(0,f.jsx)(v.h,{mx:"2px"})]})]}),(0,f.jsx)(C.x,{children:"Open the site in two browsers (e.g., Chrome and Firefox) to observe data syncing between them. Since data is stored in each browser's IndexedDB, you'll need to use two different browser instances."}),(0,f.jsx)(H.X,{as:"h3",children:"Key Value Operations"}),(0,f.jsxs)(E.xu,{children:["Key: ",(0,f.jsx)(T.I,{value:er,onChange:e=>{es(e.target.value)}}),"Value: ",(0,f.jsx)(T.I,{value:en,onChange:e=>{eo(e.target.value)}}),(0,f.jsx)($.z,{onClick:eV,children:"Put"}),(0,f.jsx)($.z,{onClick:eZ,children:"Get"}),(0,f.jsx)($.z,{onClick:eY,children:"Delete"})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Textarea Example"}),(0,f.jsx)(A.g,{value:ec,onChange:e3}),(0,f.jsx)(H.X,{as:"h6",size:"sm",children:"Textarea History"}),(0,f.jsx)(E.xu,{maxH:"100px",overflowY:"scroll",children:(0,f.jsx)(I.QI,{children:eg.map((e,t)=>(0,f.jsx)(I.HC,{children:e},t))})})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Content Addressed Textarea Example"}),(0,f.jsx)(A.g,{value:eh,onChange:e8})]}),(0,f.jsxs)(E.xu,{mb:2,children:[(0,f.jsx)(H.X,{as:"h3",children:"KV Store"}),(0,f.jsxs)(E.xu,{children:[ea.map((e,t)=>(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(M.h,{onClick:()=>e0(e.key),"aria-label":"Delete",icon:(0,f.jsx)(S.p,{}),mr:2}),e.key.toString()," : ",new TextDecoder().decode(e.value)]},t)),(0,f.jsx)($.z,{onClick:e1,mt:2,children:"Reload store"})]})]})]}),(0,f.jsxs)(k.W,{pt:"2",children:[(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Config"}),(0,f.jsxs)(I.QI,{children:[(0,f.jsxs)(I.HC,{children:["Topic: ",eX]}),(0,f.jsxs)(I.HC,{children:["DHT Prefix: ",e_]}),(0,f.jsxs)(I.HC,{children:["Bootstrappers ",eU.join(", ")]}),(0,f.jsxs)(I.HC,{children:["Delegated Router: ",eF]})]})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"DAG"}),(0,f.jsxs)(E.xu,{children:["Height: ",n?n.toString():0]}),(0,f.jsx)(E.xu,{children:"Heads:"}),(0,f.jsx)(I.QI,{children:r&&r.map((e,t)=>(0,f.jsx)(I.HC,{children:e.toString()},t))}),(0,f.jsxs)(E.xu,{children:["Dirty: ",c?"Yes":"No"]}),(0,f.jsxs)(E.xu,{children:["Queued Jobs: ",a]})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Dial a peer"}),(0,f.jsx)(T.I,{value:eD,onChange:e=>{eE(e.target.value)},placeholder:"Multiaddr"}),(0,f.jsx)($.z,{onClick:ez,children:"Connect"})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Gossip Peers"}),(0,f.jsx)(I.QI,{children:eS&&eS.map(e=>(0,f.jsx)(I.HC,{children:e.toString()},e.toString()))})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Browser Dialable Multiaddrs"}),(0,f.jsx)(I.QI,{children:em.map((e,t)=>(0,f.jsx)(I.HC,{children:e.toString()},t))})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"All Multiaddrs"}),(0,f.jsx)(I.QI,{children:ej.map((e,i)=>(0,f.jsx)(I.HC,{children:e.toString()+"/p2p/"+(null==t?void 0:t.dagService.libp2p.peerId.toString())},i))})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Connections"}),(0,f.jsx)(I.QI,{children:(e=>{let t=new Map;return e.forEach(e=>{if("open"===e.status){let i=t.get(e.remotePeer.toString()),r=[...new Set(e.remoteAddr.protoNames())];if(null==i?void 0:i.length){let s=r.filter(e=>!i.includes(e));t.set(e.remotePeer.toString(),[...i,...s])}else t.set(e.remotePeer.toString(),r)}}),[...t.entries()].map(e=>{let[t,i]=e;return{peerId:t,protocols:i}})})(ex).map(e=>(0,f.jsxs)(I.HC,{children:[e.peerId," (",e.protocols.join(", "),")"]},e.peerId))})]})]})]}),(0,f.jsxs)(E.xu,{children:[(0,f.jsx)(H.X,{as:"h3",children:"Graph"}),(0,f.jsx)(D.M,{children:(0,f.jsx)(E.xu,{maxW:"100%",overflow:"scroll",ref:e})})]})]})]})}}},function(e){e.O(0,[838,174,888,774,179],function(){return e(e.s=8312)}),_N_E=e.O()}]);